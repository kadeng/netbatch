# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: message.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='message.proto',
  package='netbatch',
  serialized_pb=_b('\n\rmessage.proto\x12\x08netbatch\"\xa6\x01\n\x0eRecordsRequest\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x04\x12/\n\x0brecord_type\x18\x02 \x01(\x0e\x32\x14.netbatch.RecordType:\x04\x46ILE\x12\x1a\n\x12record_source_path\x18\x03 \x02(\t\x12\x1d\n\x15record_source_indices\x18\x04 \x03(\r\x12\x16\n\x0erecord_indices\x18\x05 \x03(\r\"\x81\x01\n\x0eListingRequest\x12\x0c\n\x04path\x18\x01 \x02(\t\x12\x16\n\x0e\x66ile_extension\x18\x02 \x01(\t\x12\x18\n\nlist_files\x18\x03 \x01(\x08:\x04true\x12\x17\n\tlist_dirs\x18\x04 \x01(\x08:\x04true\x12\x16\n\x07recurse\x18\x05 \x01(\x08:\x05\x66\x61lse\"&\n\x08\x46ileInfo\x12\x0c\n\x04path\x18\x01 \x02(\t\x12\x0c\n\x04size\x18\x02 \x02(\x04\"m\n\x0fListingResponse\x12)\n\x07request\x18\x01 \x02(\x0b\x32\x18.netbatch.ListingRequest\x12!\n\x05\x66iles\x18\x02 \x03(\x0b\x32\x12.netbatch.FileInfo\x12\x0c\n\x04\x64irs\x18\x03 \x03(\t\"y\n\rBatchResponse\x12\x33\n\x04\x63ode\x18\x01 \x02(\x0e\x32\x1b.netbatch.BatchResponseCode:\x08\x41\x43\x43\x45PTED\x12\x33\n\x10listing_response\x18\x02 \x03(\x0b\x32\x19.netbatch.ListingResponse\"\x87\x01\n\x0c\x42\x61tchRequest\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x02(\x04\x12\x31\n\x0frecord_requests\x18\x02 \x03(\x0b\x32\x18.netbatch.RecordsRequest\x12\x32\n\x10listing_requests\x18\x03 \x03(\x0b\x32\x18.netbatch.ListingRequest\"}\n\x06Record\x12\x10\n\x08route_id\x18\x01 \x02(\x07\x12\x10\n\x08\x62\x61tch_id\x18\x02 \x02(\x04\x12\x14\n\x0crecord_index\x18\x03 \x01(\r\x12+\n\nerror_code\x18\x04 \x01(\x0e\x32\x13.netbatch.ErrorCode:\x02OK\x12\x0c\n\x04\x64\x61ta\x18\x05 \x01(\x0c*M\n\nRecordType\x12\x08\n\x04\x46ILE\x10\x00\x12\x15\n\x11RECORDFILE_RECORD\x10\x01\x12\t\n\x05VIDEO\x10\x02\x12\x13\n\x0f\x44\x41TABASE_RECORD\x10\x03*-\n\x0bRequestType\x12\x10\n\x0cRECORD_BATCH\x10\x01\x12\x0c\n\x08LISTINGS\x10\x02*\xa0\x01\n\tErrorCode\x12\x06\n\x02OK\x10\x00\x12\x14\n\x10\x46ILE_OPEN_FAILED\x10\x01\x12\r\n\tTOO_LARGE\x10\x02\x12\x17\n\x13INDEX_OUT_OF_BOUNDS\x10\x03\x12\x15\n\x11\x46ILE_FORMAT_ERROR\x10\x04\x12\x10\n\x0cINVALID_PATH\x10\x05\x12\x13\n\x0fNOT_IMPLEMENTED\x10\x06\x12\x0f\n\x0bOTHER_ERROR\x10\x07*,\n\x11\x42\x61tchResponseCode\x12\x0c\n\x08\x41\x43\x43\x45PTED\x10\x00\x12\t\n\x05\x45RROR\x10\x01')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_RECORDTYPE = _descriptor.EnumDescriptor(
  name='RecordType',
  full_name='netbatch.RecordType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FILE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECORDFILE_RECORD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VIDEO', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATABASE_RECORD', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=867,
  serialized_end=944,
)
_sym_db.RegisterEnumDescriptor(_RECORDTYPE)

RecordType = enum_type_wrapper.EnumTypeWrapper(_RECORDTYPE)
_REQUESTTYPE = _descriptor.EnumDescriptor(
  name='RequestType',
  full_name='netbatch.RequestType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RECORD_BATCH', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LISTINGS', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=946,
  serialized_end=991,
)
_sym_db.RegisterEnumDescriptor(_REQUESTTYPE)

RequestType = enum_type_wrapper.EnumTypeWrapper(_REQUESTTYPE)
_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='netbatch.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_OPEN_FAILED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOO_LARGE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INDEX_OUT_OF_BOUNDS', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILE_FORMAT_ERROR', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_PATH', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_IMPLEMENTED', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHER_ERROR', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=994,
  serialized_end=1154,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
_BATCHRESPONSECODE = _descriptor.EnumDescriptor(
  name='BatchResponseCode',
  full_name='netbatch.BatchResponseCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACCEPTED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1156,
  serialized_end=1200,
)
_sym_db.RegisterEnumDescriptor(_BATCHRESPONSECODE)

BatchResponseCode = enum_type_wrapper.EnumTypeWrapper(_BATCHRESPONSECODE)
FILE = 0
RECORDFILE_RECORD = 1
VIDEO = 2
DATABASE_RECORD = 3
RECORD_BATCH = 1
LISTINGS = 2
OK = 0
FILE_OPEN_FAILED = 1
TOO_LARGE = 2
INDEX_OUT_OF_BOUNDS = 3
FILE_FORMAT_ERROR = 4
INVALID_PATH = 5
NOT_IMPLEMENTED = 6
OTHER_ERROR = 7
ACCEPTED = 0
ERROR = 1



_RECORDSREQUEST = _descriptor.Descriptor(
  name='RecordsRequest',
  full_name='netbatch.RecordsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='netbatch.RecordsRequest.batch_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_type', full_name='netbatch.RecordsRequest.record_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_source_path', full_name='netbatch.RecordsRequest.record_source_path', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_source_indices', full_name='netbatch.RecordsRequest.record_source_indices', index=3,
      number=4, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_indices', full_name='netbatch.RecordsRequest.record_indices', index=4,
      number=5, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=194,
)


_LISTINGREQUEST = _descriptor.Descriptor(
  name='ListingRequest',
  full_name='netbatch.ListingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='netbatch.ListingRequest.path', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_extension', full_name='netbatch.ListingRequest.file_extension', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='list_files', full_name='netbatch.ListingRequest.list_files', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='list_dirs', full_name='netbatch.ListingRequest.list_dirs', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recurse', full_name='netbatch.ListingRequest.recurse', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=326,
)


_FILEINFO = _descriptor.Descriptor(
  name='FileInfo',
  full_name='netbatch.FileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='netbatch.FileInfo.path', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='netbatch.FileInfo.size', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=328,
  serialized_end=366,
)


_LISTINGRESPONSE = _descriptor.Descriptor(
  name='ListingResponse',
  full_name='netbatch.ListingResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='netbatch.ListingResponse.request', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='files', full_name='netbatch.ListingResponse.files', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dirs', full_name='netbatch.ListingResponse.dirs', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=368,
  serialized_end=477,
)


_BATCHRESPONSE = _descriptor.Descriptor(
  name='BatchResponse',
  full_name='netbatch.BatchResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='netbatch.BatchResponse.code', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='listing_response', full_name='netbatch.BatchResponse.listing_response', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=479,
  serialized_end=600,
)


_BATCHREQUEST = _descriptor.Descriptor(
  name='BatchRequest',
  full_name='netbatch.BatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='netbatch.BatchRequest.batch_id', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_requests', full_name='netbatch.BatchRequest.record_requests', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='listing_requests', full_name='netbatch.BatchRequest.listing_requests', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=603,
  serialized_end=738,
)


_RECORD = _descriptor.Descriptor(
  name='Record',
  full_name='netbatch.Record',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='route_id', full_name='netbatch.Record.route_id', index=0,
      number=1, type=7, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='netbatch.Record.batch_id', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='record_index', full_name='netbatch.Record.record_index', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error_code', full_name='netbatch.Record.error_code', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='netbatch.Record.data', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=740,
  serialized_end=865,
)

_RECORDSREQUEST.fields_by_name['record_type'].enum_type = _RECORDTYPE
_LISTINGRESPONSE.fields_by_name['request'].message_type = _LISTINGREQUEST
_LISTINGRESPONSE.fields_by_name['files'].message_type = _FILEINFO
_BATCHRESPONSE.fields_by_name['code'].enum_type = _BATCHRESPONSECODE
_BATCHRESPONSE.fields_by_name['listing_response'].message_type = _LISTINGRESPONSE
_BATCHREQUEST.fields_by_name['record_requests'].message_type = _RECORDSREQUEST
_BATCHREQUEST.fields_by_name['listing_requests'].message_type = _LISTINGREQUEST
_RECORD.fields_by_name['error_code'].enum_type = _ERRORCODE
DESCRIPTOR.message_types_by_name['RecordsRequest'] = _RECORDSREQUEST
DESCRIPTOR.message_types_by_name['ListingRequest'] = _LISTINGREQUEST
DESCRIPTOR.message_types_by_name['FileInfo'] = _FILEINFO
DESCRIPTOR.message_types_by_name['ListingResponse'] = _LISTINGRESPONSE
DESCRIPTOR.message_types_by_name['BatchResponse'] = _BATCHRESPONSE
DESCRIPTOR.message_types_by_name['BatchRequest'] = _BATCHREQUEST
DESCRIPTOR.message_types_by_name['Record'] = _RECORD
DESCRIPTOR.enum_types_by_name['RecordType'] = _RECORDTYPE
DESCRIPTOR.enum_types_by_name['RequestType'] = _REQUESTTYPE
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE
DESCRIPTOR.enum_types_by_name['BatchResponseCode'] = _BATCHRESPONSECODE

RecordsRequest = _reflection.GeneratedProtocolMessageType('RecordsRequest', (_message.Message,), dict(
  DESCRIPTOR = _RECORDSREQUEST,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.RecordsRequest)
  ))
_sym_db.RegisterMessage(RecordsRequest)

ListingRequest = _reflection.GeneratedProtocolMessageType('ListingRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTINGREQUEST,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.ListingRequest)
  ))
_sym_db.RegisterMessage(ListingRequest)

FileInfo = _reflection.GeneratedProtocolMessageType('FileInfo', (_message.Message,), dict(
  DESCRIPTOR = _FILEINFO,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.FileInfo)
  ))
_sym_db.RegisterMessage(FileInfo)

ListingResponse = _reflection.GeneratedProtocolMessageType('ListingResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTINGRESPONSE,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.ListingResponse)
  ))
_sym_db.RegisterMessage(ListingResponse)

BatchResponse = _reflection.GeneratedProtocolMessageType('BatchResponse', (_message.Message,), dict(
  DESCRIPTOR = _BATCHRESPONSE,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.BatchResponse)
  ))
_sym_db.RegisterMessage(BatchResponse)

BatchRequest = _reflection.GeneratedProtocolMessageType('BatchRequest', (_message.Message,), dict(
  DESCRIPTOR = _BATCHREQUEST,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.BatchRequest)
  ))
_sym_db.RegisterMessage(BatchRequest)

Record = _reflection.GeneratedProtocolMessageType('Record', (_message.Message,), dict(
  DESCRIPTOR = _RECORD,
  __module__ = 'message_pb2'
  # @@protoc_insertion_point(class_scope:netbatch.Record)
  ))
_sym_db.RegisterMessage(Record)


# @@protoc_insertion_point(module_scope)
